/*
 * generated by Xtext 2.10.0-SNAPSHOT
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBook
entryRuleBook
:
{ before(grammarAccess.getBookRule()); }
	 ruleBook
{ after(grammarAccess.getBookRule()); } 
	 EOF 
;

// Rule Book
ruleBook 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBookAccess().getGroup()); }
		(rule__Book__Group__0)
		{ after(grammarAccess.getBookAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSection
entryRuleSection
:
{ before(grammarAccess.getSectionRule()); }
	 ruleSection
{ after(grammarAccess.getSectionRule()); } 
	 EOF 
;

// Rule Section
ruleSection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionAccess().getGroup()); }
		(rule__Section__Group__0)
		{ after(grammarAccess.getSectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSectionReference
entryRuleSectionReference
:
{ before(grammarAccess.getSectionReferenceRule()); }
	 ruleSectionReference
{ after(grammarAccess.getSectionReferenceRule()); } 
	 EOF 
;

// Rule SectionReference
ruleSectionReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSectionReferenceAccess().getGroup()); }
		(rule__SectionReference__Group__0)
		{ after(grammarAccess.getSectionReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSectionAccess().getSTRINGTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSectionAccess().getGroup_2_1()); }
		(rule__Section__Group_2_1__0)
		{ after(grammarAccess.getSectionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__0__Impl
	rule__Book__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getTitleKeyword_0()); }
	'title'
	{ after(grammarAccess.getBookAccess().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__1__Impl
	rule__Book__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getNameAssignment_1()); }
	(rule__Book__NameAssignment_1)
	{ after(grammarAccess.getBookAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Book__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBookAccess().getSectionsAssignment_2()); }
	(rule__Book__SectionsAssignment_2)*
	{ after(grammarAccess.getBookAccess().getSectionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__0__Impl
	rule__Section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
	'section'
	{ after(grammarAccess.getSectionAccess().getSectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__1__Impl
	rule__Section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getNameAssignment_1()); }
	(rule__Section__NameAssignment_1)
	{ after(grammarAccess.getSectionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getAlternatives_2()); }
	(rule__Section__Alternatives_2)*
	{ after(grammarAccess.getSectionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Section__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_2_1__0__Impl
	rule__Section__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getRefKeyword_2_1_0()); }
	'ref'
	{ after(grammarAccess.getSectionAccess().getRefKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Section__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionAccess().getSectionReferencesAssignment_2_1_1()); }
	(rule__Section__SectionReferencesAssignment_2_1_1)
	{ after(grammarAccess.getSectionAccess().getSectionReferencesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SectionReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group__0__Impl
	rule__SectionReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getSectionReferenceAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getGroup_1()); }
	(rule__SectionReference__Group_1__0)?
	{ after(grammarAccess.getSectionReferenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SectionReference__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group_1__0__Impl
	rule__SectionReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getSectionReferenceAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SectionReference__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SectionReference__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSectionReferenceAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getSectionReferenceAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Book__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBookAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBookAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Book__SectionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBookAccess().getSectionsSectionParserRuleCall_2_0()); }
		ruleSection
		{ after(grammarAccess.getBookAccess().getSectionsSectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSectionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Section__SectionReferencesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSectionAccess().getSectionReferencesSectionCrossReference_2_1_1_0()); }
		(
			{ before(grammarAccess.getSectionAccess().getSectionReferencesSectionSectionReferenceParserRuleCall_2_1_1_0_1()); }
			ruleSectionReference
			{ after(grammarAccess.getSectionAccess().getSectionReferencesSectionSectionReferenceParserRuleCall_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getSectionAccess().getSectionReferencesSectionCrossReference_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
